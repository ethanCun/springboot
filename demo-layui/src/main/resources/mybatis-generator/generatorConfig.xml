<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!--配置生成器-->
<generatorConfiguration>

    <!--执行generator插件生成文件的命令： call mvn mybatis-generator:generate -e-->
    <!--引入配置文件 -->
    <properties resource="mybatis-generator/mybatisGeneratorInit.properties"></properties>

    <!--classPathEntry:数据库的JDBC驱动,换成你自己的驱动位置 可选-->
    <!--<classPathEntry location="D:\generator_mybatis\mysql-connector-java-5.1.24-bin.jar" /> -->


    <!--一个数据库一个context-->
    <!--defaultModelType="flat" 大数据字段，不分表-->
    <context id="MysqlTables" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!--自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖-->
        <property name="autoDelimitKeywords" value="true"></property>

        <!--生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="utf-8"></property>

        <!--beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号；-->
        <property name="beginningDelimiter" value="`"></property>
        <property name="endingDelimiter" value="`"></property>

        <!--格式化java代码-->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"></property>
        <!--格式化XML代码-->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"></property>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"></plugin>

        <!--注释-->
        <commentGenerator>
            <!--是否取消注释-->
            <property name="suppressAllComments" value="false"></property>
            <!--是否生成注释时间戳-->
            <property name="suppressDate" value="true"></property>
        </commentGenerator>

        <!--jdbc连接-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/lauuiTestUsers"
                        userId="root"
                        password="czy1212">

        </jdbcConnection>

        <!--类型转化-->
        <javaTypeResolver>

            <!--是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.）-->
            <property name="forceBigDecimals" value="false"></property>
        </javaTypeResolver>

        <!--生成实体类地址-->
        <javaModelGenerator targetPackage="com.example.demo.domain" targetProject="${project}">

            <property name="enableSubPackages" value="false"></property>
            <property name="trimStrings" value="true"></property>

        </javaModelGenerator>

        <!-- 生成mapxml文件-->
        <sqlMapGenerator targetPackage="mapper" targetProject="${resource}">
            <property name="enableSubPackages" value="false"></property>
        </sqlMapGenerator>

        <!--生成mapxml对应client，也就是接口dao-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.example.demo.dao"
                             targetProject="${project}">
            <property name="enableSubPackages" value="false"></property>
        </javaClientGenerator>

        <!--
        table可以有多个,每个数据库中的表都可以写一个table，tableName表示要匹配的数据库表,
        也可以在tableName属性中通过使用%通配符来匹配所有数据库表,只有匹配的表才会自动生成文件
        -->
        <table tableName="t_layuiuser"
               sqlProviderName="UserDao"
               mapperName="UserMapper"
               domainObjectName="User"
               enableCountByExample="true"
               enableUpdateByExample="true"
               enableDeleteByExample="true"
               enableSelectByExample="true"
               enableSelectByPrimaryKey="true">

            <!--数据库表主键 -->
            <generatedKey column="id" sqlStatement="MySql" identity="true"></generatedKey>

        </table>


    </context>
</generatorConfiguration>